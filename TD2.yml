openapi: '3.0.2'
info:
  title: CINEMA STD21034
  description: "Global description of my API"
  version: '1.0'
servers:
  - url: https://cinema_STD21034.com
tags:
  - name: Films
  - name: Rooms
  - name: Screening
  - name: Categories
paths:
  /films:
    get:
      tags:
        - Films
      operationId: getFilms
      summary: "Get all films"
      description: "Get all films with details"
      responses:
        '200':
          description: List of films
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Films'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Films
      operationId: addFilms
      summary: "Add new films"
      description: "Add new films with all properties"
      requestBody:
        description: "Films to be created"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateFilms'
      responses:
        '200':
          description: Films created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Films'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          
    put:
      tags:
        - Films
      operationId: putFilms
      summary: "Update some existing films"
      description: "Update all informations about some films"
      requestBody:
        description: "Film to be updated"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Films'
      responses:
        '200':
          description: Ressource  updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Films'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Films
      operationId: patchFilms
      summary: "Update some existing films (partially)"
      description: "Update one or more specifics informations about some films"
      requestBody:
        description: Films to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Films'
            examples:
              changeFilmsTitle:
                summary: Change title
                description: How to change title and what it does
                value:
                  id: 1
                  title : new title
              changeFilmsDuration:
                summary: Change duration
                description: How to change duration and what it does
                value:
                  id: 1
                  duration: new duration
              changeFilmsSummary:
                summary: Change summary
                description: How to change summary and what it does
                value:
                  id: 1
                  summary: Lorem ip sum dolor
              changeFilmsDirector:
                summary: Change Director
                description: How to change summary and what it does
                value:
                  id: 1
                  summary: Will Smith
              changeFilmsPostingDate:
                summary: Change posting_date
                description: How to change posting date and what it does
                value:
                  id: 1
                  summary: new date


      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Films'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /films/{id}:
    get:
      tags:
        - Films
      operationId: getFilmById
      summary: "Get film by identifier"
      description: "Get film by identifier with details"
      parameters:
        - name: id
          in: path
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screening'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'     
    delete:
      tags:
        - Films
      operationId: deleteFilms
      summary: "Delete films by identifier"
      description: "Films to be deleted"
      parameters:
        - name: id
          in: path
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Ressource deleted
          content: {}
                
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /films/categories/{id}:
    get:
      tags:
        - Films
      operationId: getFilmsByCategory
      summary: "Get films by category"
      description: "Get films by category with details"
      parameters:
        - name: id
          in: path
          required: true
          explode: true
          schema:
            type: integer
      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FilmsByCategories'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /rooms:
    get:
      tags:
        - Rooms
      operationId: getAllRoms
      summary: "Get all rooms"
      description: "Get all rooms with details"
      responses:
        '200':
          description: List of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Rooms
      operationId: createRooms
      summary: "Create rooms"
      description: "Create new rooms with all properties"
      requestBody:
        description:  rooms to be created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateRooms'
      responses:
        '200':
          description: Rooms created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Rooms
      operationId: putRooms
      summary: "Update existing rooms"
      description: "Update rooms"
      requestBody:
        description: Rooms to be updated
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Room'
      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Rooms
      operationId: putRooms
      summary: "Update existing rooms"
      description: "Update rooms"
      requestBody:
        description: Rooms to be updated
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Room'
      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /screening:
    get:
      tags:
        - Screening
      operationId: getAllScreening
      summary: "Get all screening"
      description: "Get all screening with details"
      responses:
        '200':
          description: List of screening
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screening'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Screening
      operationId: createScreening
      summary: "Create screening"
      description: "Create new screening with all properties"
      requestBody:
        description: screening to be created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Screening'
      responses:
        '200':
          description: Screening created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screening'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Screening
      operationId: putScreening
      summary: "Update existing screening"
      description: "Update screening"
      requestBody:
        description: Screening to be updated
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Screening'
      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screening'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Screening
      operationId: patchScreening
      summary: "Update existing screening (partially)"
      description: "Update screening"
      requestBody:
        description: Screening to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Screening'
            examples:
              changeFilms:
                summary: Change films
                description: How to change film and what it does
                value:
                  id: 1
                  title : new film
                  duration: 00:00:00
                  summary: Lorem ip sum dolor
                  Director: Lionnel Ritchie
                  posting_date: new date
              changeRooms:
                summary: Change room
                description: How to change room and what it does
                value:
                  id: 1
                  number: new number
                  capacity: new capacity
              changeBroadCastTime:
                summary: Change broadcast_time
                description: How to change broadcast_time and what it does
                value:
                  id: 1
                  broadcast_time: new broadcast_time
      responses:
        '200':
          description: Ressource updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Screening'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  /categories:
    get:
      tags:
        - Categories
      operationId: getAllCategories
      summary: "Get all categories"
      description: "Get all categories with details"
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categories'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Categories
      operationId: createCategories
      summary: "Create categories"
      description: "Create new categories with all properties"
      requestBody:
        description: Categories to be created
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCategories'
      responses:
        '200':
          description: Screening created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Categories'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'                    


components:
  schemas:
    CreateRooms :
      type: object
      properties:
        capacity:
          type: integer
          format: int64
          example: 200
    Room :
      type: object
      properties:
        number:
          type: integer
          format: int64
          example: 1
      allOf:
        - $ref: '#/components/schemas/CreateRooms'
    Screening:
      type: object
      properties:
        film:
          type: array
          items:
            $ref:  "#/components/schemas/Films"
        room:
          type: array
          items:
            $ref:  "#/components/schemas/Room"
        broadcast_time:
          type: string
          format: time
          example: 03:00 PM
    CreateFilms:
      type: object
      properties:
        title:
          type: string
          example: Aquaman
        duration:
          type: string
          format: time
          example: 01:48:50
        summary:
          type: string
          example: Lorem ipsum dolor
        Director:
          type: string
          example: Jason Momoa
        posting_date:
          type: string
          format: date
          example: 20-07-2022
    Films:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
      allOf:
        - $ref: "#/components/schemas/CreateFilms"
    FilmsByCategories:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example : 1
        type:
          type: string
          example : "action"
        film:
          type: array
          items:
            $ref:  "#/components/schemas/Films"
    CreateCategories:
      type: object
      properties:
        type:
          type: string
          example : "action"
    Categories:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example : 1
      allOf:
        - $ref: '#/components/schemas/CreateCategories'
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int64
          example: 400
        message:
          type: string
          example: Error_400_Bad_Request